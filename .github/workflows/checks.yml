name: Test youspotube

on:
  push:
    branches:
      - dev
      - master
  pull_request:
    branches:
      - master

jobs:
  test_linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 coverage pyinstaller
          pip install -r requirements.txt
      - name: Lint with flake8
        run: |
          # check for syntax errors/undefined names
          flake8 . --select=E9,F63,F7,F82 --show-source
          # check for PEP-8 compliance
          # while PEP-8 requires maximum of 79 characters, the GitHub editor is 127 chars wide so we'll stick to that
          flake8 . --max-complexity=10 --max-line-length=127
      - name: Test with unittest and collect test coverage
        run: |
          python -m coverage run --source=./src -m unittest -v
      - name: Check if coverage meets the requirement
        run: |
          coverage_percentage=$(python -m coverage report | awk '$1 == "TOTAL" {print $NF+0}')
          required_percentage=80
          if [ ${coverage_percentage} -lt ${required_percentage} ]; then 
            echo "Code coverage is required to be above than ${required_percentage}%, currently it is ${coverage_percentage}%"
            exit 1
          fi

  test_win:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Test with unittest
        run: |
          python -m unittest -v

  test_macos:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Test with unittest
        run: |
          python -m unittest -v